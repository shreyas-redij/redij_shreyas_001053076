/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;
import Business.VitalSignHistory;
import Business.VitalSigns;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shrey
 */
public class AbnormalJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AbnormalJPanel
     */
    private VitalSignHistory vsh;
    double maxBP;
    double minBP;
    public AbnormalJPanel(VitalSignHistory vsh, double maxBP, double minBP) {
        initComponents();
        this.vsh = vsh;
        this.maxBP=maxBP;
        this.minBP=minBP;
        //populateTable();
        
       /* tempTextField.setEnabled(false);
        bloodTextField.setEnabled(false);
        pulseTextField.setEnabled(false);
        dateTextField.setEnabled(false);*/
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        pulseTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        detailButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        deleteButton = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnConfirm = new javax.swing.JButton();
        bloodTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dateTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tempTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignsTable = new javax.swing.JTable();

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel5.setText("Date: ");

        pulseTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pulseTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Abnormal Vital Sign");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel2.setText("Temperature: ");

        detailButton.setText("Details");
        detailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        bloodTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel4.setText("Pulse:");

        dateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel3.setText("Bloodpressure:");

        tempTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempTextFieldActionPerformed(evt);
            }
        });

        vitalSignsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Blood Pressure"
            }
        ));
        jScrollPane1.setViewportView(vitalSignsTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pulseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bloodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(139, 139, 139)
                                .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                        .addComponent(btnConfirm)
                        .addGap(138, 138, 138))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(detailButton, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                        .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(btnUpdate))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(detailButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pulseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addContainerGap(188, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirm)
                        .addGap(166, 166, 166))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pulseTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pulseTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pulseTextFieldActionPerformed

    private void detailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailButtonActionPerformed
        int selectedRow = vitalSignsTable.getSelectedRow();

        if (selectedRow >= 0) {
            VitalSigns vs = (VitalSigns) vitalSignsTable.getValueAt(selectedRow, 0);
            tempTextField.setText(vs.getTemperature() + "");
            bloodTextField.setText(vs.getBloodPressure() + "");
            pulseTextField.setText(vs.getPulse() + "");
            dateTextField.setText(vs.getDate());
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row.");
        }
    }//GEN-LAST:event_detailButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int selectedRow = vitalSignsTable.getSelectedRow();

        if (selectedRow >= 0) {
            VitalSigns vs = (VitalSigns) vitalSignsTable.getValueAt(selectedRow, 0);
            vsh.deleteVital(vs);
            JOptionPane.showMessageDialog(null, "Vital Sign deleted.");
            //populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row.");
        }
        tempTextField.setText("");
        bloodTextField.setText("");
        pulseTextField.setText("");
        dateTextField.setText("");
    }//GEN-LAST:event_deleteButtonActionPerformed
    
   /* private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) vitalSignsTable.getModel();
        dtm.setRowCount(0);
        for (VitalSigns vs : vsh.getVitalSignHistory()) {
          
        if(vs.getBloodPressure()<minBP | vs.getBloodPressure()>maxBP){
            vs.getBloodPressure();
            Object row[] = new Object[2];
            row[0] = vs;
            row[1] = vs.getBloodPressure();
            dtm.addRow(row);
        }
       }
    }*/
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        int selectedRow = vitalSignsTable.getSelectedRow();

        if (selectedRow >= 0) {
            VitalSigns vs = (VitalSigns) vitalSignsTable.getValueAt(selectedRow, 0);
            tempTextField.setText(vs.getTemperature() + "");
            bloodTextField.setText(vs.getBloodPressure() + "");
            pulseTextField.setText(vs.getPulse() + "");
            dateTextField.setText(vs.getDate());

            tempTextField.setEnabled(true);
            bloodTextField.setEnabled(true);
            pulseTextField.setEnabled(true);
            dateTextField.setEnabled(true);

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row.");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:

        /*VitalSigns v = new VitalSigns();

        String temp = tempTextField.getText();
        try {
            Double.parseDouble(temp);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, temp + " is not a valid number.");
        }
        double temperature = Double.parseDouble(temp);
        v.setTemperature(temperature);

        String blood = bloodTextField.getText();
        try {
            Double.parseDouble(blood);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, blood + " is not a valid number.");
        }
        double bloodPressure = Double.parseDouble(blood);
        v.setBloodPressure(bloodPressure);

        String p = pulseTextField.getText();
        try {
            Integer.parseInt(p);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, p + " is not a valid number.");
        }
        int pulse = Integer.parseInt(p);
        v.setPulse(pulse);

        String date = dateTextField.getText();
        v.setDate(date);

        vsh.addVital(v);

        JOptionPane.showMessageDialog(null, "Virtual Signs Updated successfully!");

        */

        int selectedRow = vitalSignsTable.getSelectedRow();
        if (selectedRow >= 0) {
            VitalSigns v = (VitalSigns) vitalSignsTable.getValueAt(selectedRow, 0);
            /*vs.setTemperature(Double.parseDouble(tempTextField.getText()));
            vs.setDate(dateTextField.getText());
            vs.setBloodPressure(Double.parseDouble(bloodTextField.getText()));
            vs.setPulse(Integer.parseInt(pulseTextField.getText()));*/

            String temp = tempTextField.getText();
            try {
                Double.parseDouble(temp);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, temp + " is not a valid number.");
            }
            double temperature = Double.parseDouble(temp);
            v.setTemperature(temperature);

            String blood = bloodTextField.getText();
            try {
                Double.parseDouble(blood);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, blood + " is not a valid number.");
            }
            double bloodPressure = Double.parseDouble(blood);
            v.setBloodPressure(bloodPressure);

            String p = pulseTextField.getText();
            try {
                Integer.parseInt(p);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, p + " is not a valid number.");
            }
            int pulse = Integer.parseInt(p);
            v.setPulse(pulse);

            String date = dateTextField.getText();
            v.setDate(date);

            //populateTable();
            JOptionPane.showMessageDialog(null, "Virtual Signs Updated successfully!");
            setAllEnabled(false);

            tempTextField.setText("");
            bloodTextField.setText("");
            pulseTextField.setText("");
            dateTextField.setText("");

        }else {
            JOptionPane.showMessageDialog(null, "Please select a row.");
        }

    }//GEN-LAST:event_btnConfirmActionPerformed
    
     private void setAllEnabled(boolean b){
         
             tempTextField.setEnabled(b);
            bloodTextField.setEnabled(b);
            pulseTextField.setEnabled(b);
            dateTextField.setEnabled(b);
     }
    
    private void bloodTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodTextFieldActionPerformed

    private void dateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextFieldActionPerformed

    private void tempTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tempTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bloodTextField;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton detailButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField pulseTextField;
    private javax.swing.JTextField tempTextField;
    private javax.swing.JTable vitalSignsTable;
    // End of variables declaration//GEN-END:variables
}
